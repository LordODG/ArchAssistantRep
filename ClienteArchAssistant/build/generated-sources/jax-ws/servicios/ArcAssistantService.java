
package servicios;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ArcAssistantService", targetNamespace = "http://Servicios/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ArcAssistantService {


    /**
     * 
     * @return
     *     returns java.util.List<servicios.Modulo>
     */
    @WebMethod(operationName = "ListarModulo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ListarModulo", targetNamespace = "http://Servicios/", className = "servicios.ListarModulo")
    @ResponseWrapper(localName = "ListarModuloResponse", targetNamespace = "http://Servicios/", className = "servicios.ListarModuloResponse")
    @Action(input = "http://Servicios/ArcAssistantService/ListarModuloRequest", output = "http://Servicios/ArcAssistantService/ListarModuloResponse")
    public List<Modulo> listarModulo();

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "CrearEscenario")
    @Oneway
    @RequestWrapper(localName = "CrearEscenario", targetNamespace = "http://Servicios/", className = "servicios.CrearEscenario")
    @Action(input = "http://Servicios/ArcAssistantService/CrearEscenario")
    public void crearEscenario(
        @WebParam(name = "parameter", targetNamespace = "")
        Escenario parameter);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "CrearModulo")
    @Oneway
    @RequestWrapper(localName = "CrearModulo", targetNamespace = "http://Servicios/", className = "servicios.CrearModulo")
    @Action(input = "http://Servicios/ArcAssistantService/CrearModulo")
    public void crearModulo(
        @WebParam(name = "parameter", targetNamespace = "")
        Modulo parameter);

    /**
     * 
     * @param parameter
     * @return
     *     returns servicios.Patron
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarPatron", targetNamespace = "http://Servicios/", className = "servicios.BuscarPatron")
    @ResponseWrapper(localName = "buscarPatronResponse", targetNamespace = "http://Servicios/", className = "servicios.BuscarPatronResponse")
    @Action(input = "http://Servicios/ArcAssistantService/buscarPatronRequest", output = "http://Servicios/ArcAssistantService/buscarPatronResponse")
    public Patron buscarPatron(
        @WebParam(name = "parameter", targetNamespace = "")
        int parameter);

    /**
     * 
     * @return
     *     returns java.util.List<servicios.Atributocalidad>
     */
    @WebMethod(operationName = "ListarAtributos")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ListarAtributos", targetNamespace = "http://Servicios/", className = "servicios.ListarAtributos")
    @ResponseWrapper(localName = "ListarAtributosResponse", targetNamespace = "http://Servicios/", className = "servicios.ListarAtributosResponse")
    @Action(input = "http://Servicios/ArcAssistantService/ListarAtributosRequest", output = "http://Servicios/ArcAssistantService/ListarAtributosResponse")
    public List<Atributocalidad> listarAtributos();

    /**
     * 
     * @param parameter
     * @return
     *     returns servicios.Proyecto
     */
    @WebMethod(operationName = "BuscarProyecto")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "BuscarProyecto", targetNamespace = "http://Servicios/", className = "servicios.BuscarProyecto")
    @ResponseWrapper(localName = "BuscarProyectoResponse", targetNamespace = "http://Servicios/", className = "servicios.BuscarProyectoResponse")
    @Action(input = "http://Servicios/ArcAssistantService/BuscarProyectoRequest", output = "http://Servicios/ArcAssistantService/BuscarProyectoResponse")
    public Proyecto buscarProyecto(
        @WebParam(name = "parameter", targetNamespace = "")
        int parameter);

    /**
     * 
     * @param parameter
     * @return
     *     returns servicios.Modulo
     */
    @WebMethod(operationName = "BuscarModulo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "BuscarModulo", targetNamespace = "http://Servicios/", className = "servicios.BuscarModulo")
    @ResponseWrapper(localName = "BuscarModuloResponse", targetNamespace = "http://Servicios/", className = "servicios.BuscarModuloResponse")
    @Action(input = "http://Servicios/ArcAssistantService/BuscarModuloRequest", output = "http://Servicios/ArcAssistantService/BuscarModuloResponse")
    public Modulo buscarModulo(
        @WebParam(name = "parameter", targetNamespace = "")
        int parameter);

    /**
     * 
     * @param parameter
     * @return
     *     returns servicios.Tactica
     */
    @WebMethod(operationName = "BuscarTactica")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "BuscarTactica", targetNamespace = "http://Servicios/", className = "servicios.BuscarTactica")
    @ResponseWrapper(localName = "BuscarTacticaResponse", targetNamespace = "http://Servicios/", className = "servicios.BuscarTacticaResponse")
    @Action(input = "http://Servicios/ArcAssistantService/BuscarTacticaRequest", output = "http://Servicios/ArcAssistantService/BuscarTacticaResponse")
    public Tactica buscarTactica(
        @WebParam(name = "parameter", targetNamespace = "")
        int parameter);

    /**
     * 
     * @param parameter
     * @return
     *     returns servicios.Usuario
     */
    @WebMethod(operationName = "BuscarUsuario")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "BuscarUsuario", targetNamespace = "http://Servicios/", className = "servicios.BuscarUsuario")
    @ResponseWrapper(localName = "BuscarUsuarioResponse", targetNamespace = "http://Servicios/", className = "servicios.BuscarUsuarioResponse")
    @Action(input = "http://Servicios/ArcAssistantService/BuscarUsuarioRequest", output = "http://Servicios/ArcAssistantService/BuscarUsuarioResponse")
    public Usuario buscarUsuario(
        @WebParam(name = "parameter", targetNamespace = "")
        String parameter);

    /**
     * 
     * @param parameter
     * @return
     *     returns servicios.Interface
     */
    @WebMethod(operationName = "BuscarInterface")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "BuscarInterface", targetNamespace = "http://Servicios/", className = "servicios.BuscarInterface")
    @ResponseWrapper(localName = "BuscarInterfaceResponse", targetNamespace = "http://Servicios/", className = "servicios.BuscarInterfaceResponse")
    @Action(input = "http://Servicios/ArcAssistantService/BuscarInterfaceRequest", output = "http://Servicios/ArcAssistantService/BuscarInterfaceResponse")
    public Interface buscarInterface(
        @WebParam(name = "parameter", targetNamespace = "")
        int parameter);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "EliminarModulo")
    @Oneway
    @RequestWrapper(localName = "EliminarModulo", targetNamespace = "http://Servicios/", className = "servicios.EliminarModulo")
    @Action(input = "http://Servicios/ArcAssistantService/EliminarModulo")
    public void eliminarModulo(
        @WebParam(name = "parameter", targetNamespace = "")
        Modulo parameter);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "EliminarAtributo")
    @Oneway
    @RequestWrapper(localName = "EliminarAtributo", targetNamespace = "http://Servicios/", className = "servicios.EliminarAtributo")
    @Action(input = "http://Servicios/ArcAssistantService/EliminarAtributo")
    public void eliminarAtributo(
        @WebParam(name = "parameter", targetNamespace = "")
        Atributocalidad parameter);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "EliminarUsuario")
    @Oneway
    @RequestWrapper(localName = "EliminarUsuario", targetNamespace = "http://Servicios/", className = "servicios.EliminarUsuario")
    @Action(input = "http://Servicios/ArcAssistantService/EliminarUsuario")
    public void eliminarUsuario(
        @WebParam(name = "parameter", targetNamespace = "")
        Usuario parameter);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "ModificarTactica")
    @Oneway
    @RequestWrapper(localName = "ModificarTactica", targetNamespace = "http://Servicios/", className = "servicios.ModificarTactica")
    @Action(input = "http://Servicios/ArcAssistantService/ModificarTactica")
    public void modificarTactica(
        @WebParam(name = "parameter", targetNamespace = "")
        Tactica parameter);

    /**
     * 
     * @param parameter
     * @return
     *     returns servicios.Escenario
     */
    @WebMethod(operationName = "BuscarEscenario")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "BuscarEscenario", targetNamespace = "http://Servicios/", className = "servicios.BuscarEscenario")
    @ResponseWrapper(localName = "BuscarEscenarioResponse", targetNamespace = "http://Servicios/", className = "servicios.BuscarEscenarioResponse")
    @Action(input = "http://Servicios/ArcAssistantService/BuscarEscenarioRequest", output = "http://Servicios/ArcAssistantService/BuscarEscenarioResponse")
    public Escenario buscarEscenario(
        @WebParam(name = "parameter", targetNamespace = "")
        int parameter);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "CrearAtributo")
    @Oneway
    @RequestWrapper(localName = "CrearAtributo", targetNamespace = "http://Servicios/", className = "servicios.CrearAtributo")
    @Action(input = "http://Servicios/ArcAssistantService/CrearAtributo")
    public void crearAtributo(
        @WebParam(name = "parameter", targetNamespace = "")
        Atributocalidad parameter);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "EliminarTactica")
    @Oneway
    @RequestWrapper(localName = "EliminarTactica", targetNamespace = "http://Servicios/", className = "servicios.EliminarTactica")
    @Action(input = "http://Servicios/ArcAssistantService/EliminarTactica")
    public void eliminarTactica(
        @WebParam(name = "parameter", targetNamespace = "")
        Tactica parameter);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "ModificarUsuario")
    @Oneway
    @RequestWrapper(localName = "ModificarUsuario", targetNamespace = "http://Servicios/", className = "servicios.ModificarUsuario")
    @Action(input = "http://Servicios/ArcAssistantService/ModificarUsuario")
    public void modificarUsuario(
        @WebParam(name = "parameter", targetNamespace = "")
        Usuario parameter);

    /**
     * 
     * @param parameter
     * @return
     *     returns java.util.List<servicios.Escenario>
     */
    @WebMethod(operationName = "ListarEscenario")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ListarEscenario", targetNamespace = "http://Servicios/", className = "servicios.ListarEscenario")
    @ResponseWrapper(localName = "ListarEscenarioResponse", targetNamespace = "http://Servicios/", className = "servicios.ListarEscenarioResponse")
    @Action(input = "http://Servicios/ArcAssistantService/ListarEscenarioRequest", output = "http://Servicios/ArcAssistantService/ListarEscenarioResponse")
    public List<Escenario> listarEscenario(
        @WebParam(name = "parameter", targetNamespace = "")
        Proyecto parameter);

    /**
     * 
     * @return
     *     returns java.util.List<servicios.Tactica>
     */
    @WebMethod(operationName = "ListarTactica")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ListarTactica", targetNamespace = "http://Servicios/", className = "servicios.ListarTactica")
    @ResponseWrapper(localName = "ListarTacticaResponse", targetNamespace = "http://Servicios/", className = "servicios.ListarTacticaResponse")
    @Action(input = "http://Servicios/ArcAssistantService/ListarTacticaRequest", output = "http://Servicios/ArcAssistantService/ListarTacticaResponse")
    public List<Tactica> listarTactica();

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "CrearProyecto")
    @Oneway
    @RequestWrapper(localName = "CrearProyecto", targetNamespace = "http://Servicios/", className = "servicios.CrearProyecto")
    @Action(input = "http://Servicios/ArcAssistantService/CrearProyecto")
    public void crearProyecto(
        @WebParam(name = "parameter", targetNamespace = "")
        Proyecto parameter);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "CrearUsuarios")
    @Oneway
    @RequestWrapper(localName = "CrearUsuarios", targetNamespace = "http://Servicios/", className = "servicios.CrearUsuarios")
    @Action(input = "http://Servicios/ArcAssistantService/CrearUsuarios")
    public void crearUsuarios(
        @WebParam(name = "parameter", targetNamespace = "")
        Usuario parameter);

    /**
     * 
     * @return
     *     returns java.util.List<servicios.Usuario>
     */
    @WebMethod(operationName = "ListarUsuarios")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ListarUsuarios", targetNamespace = "http://Servicios/", className = "servicios.ListarUsuarios")
    @ResponseWrapper(localName = "ListarUsuariosResponse", targetNamespace = "http://Servicios/", className = "servicios.ListarUsuariosResponse")
    @Action(input = "http://Servicios/ArcAssistantService/ListarUsuariosRequest", output = "http://Servicios/ArcAssistantService/ListarUsuariosResponse")
    public List<Usuario> listarUsuarios();

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "ModificarPatron")
    @Oneway
    @RequestWrapper(localName = "ModificarPatron", targetNamespace = "http://Servicios/", className = "servicios.ModificarPatron")
    @Action(input = "http://Servicios/ArcAssistantService/ModificarPatron")
    public void modificarPatron(
        @WebParam(name = "parameter", targetNamespace = "")
        Patron parameter);

    /**
     * 
     * @param parameter
     * @return
     *     returns servicios.Atributocalidad
     */
    @WebMethod(operationName = "BuscarAtributo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "BuscarAtributo", targetNamespace = "http://Servicios/", className = "servicios.BuscarAtributo")
    @ResponseWrapper(localName = "BuscarAtributoResponse", targetNamespace = "http://Servicios/", className = "servicios.BuscarAtributoResponse")
    @Action(input = "http://Servicios/ArcAssistantService/BuscarAtributoRequest", output = "http://Servicios/ArcAssistantService/BuscarAtributoResponse")
    public Atributocalidad buscarAtributo(
        @WebParam(name = "parameter", targetNamespace = "")
        int parameter);

    /**
     * 
     * @param password
     * @param usuario
     * @return
     *     returns servicios.Usuario
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "iniciarSesion", targetNamespace = "http://Servicios/", className = "servicios.IniciarSesion")
    @ResponseWrapper(localName = "iniciarSesionResponse", targetNamespace = "http://Servicios/", className = "servicios.IniciarSesionResponse")
    @Action(input = "http://Servicios/ArcAssistantService/iniciarSesionRequest", output = "http://Servicios/ArcAssistantService/iniciarSesionResponse")
    public Usuario iniciarSesion(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "EliminarPatron")
    @Oneway
    @RequestWrapper(localName = "EliminarPatron", targetNamespace = "http://Servicios/", className = "servicios.EliminarPatron")
    @Action(input = "http://Servicios/ArcAssistantService/EliminarPatron")
    public void eliminarPatron(
        @WebParam(name = "parameter", targetNamespace = "")
        Patron parameter);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "CrearTactica")
    @Oneway
    @RequestWrapper(localName = "CrearTactica", targetNamespace = "http://Servicios/", className = "servicios.CrearTactica")
    @Action(input = "http://Servicios/ArcAssistantService/CrearTactica")
    public void crearTactica(
        @WebParam(name = "parameter", targetNamespace = "")
        Tactica parameter);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "CrearInterface")
    @Oneway
    @RequestWrapper(localName = "CrearInterface", targetNamespace = "http://Servicios/", className = "servicios.CrearInterface")
    @Action(input = "http://Servicios/ArcAssistantService/CrearInterface")
    public void crearInterface(
        @WebParam(name = "parameter", targetNamespace = "")
        Interface parameter);

    /**
     * 
     * @return
     *     returns java.util.List<servicios.Patron>
     */
    @WebMethod(operationName = "ListarPatrones")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ListarPatrones", targetNamespace = "http://Servicios/", className = "servicios.ListarPatrones")
    @ResponseWrapper(localName = "ListarPatronesResponse", targetNamespace = "http://Servicios/", className = "servicios.ListarPatronesResponse")
    @Action(input = "http://Servicios/ArcAssistantService/ListarPatronesRequest", output = "http://Servicios/ArcAssistantService/ListarPatronesResponse")
    public List<Patron> listarPatrones();

    /**
     * 
     * @param parameter
     * @return
     *     returns java.util.List<servicios.Proyecto>
     */
    @WebMethod(operationName = "ListarProyectos")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ListarProyectos", targetNamespace = "http://Servicios/", className = "servicios.ListarProyectos")
    @ResponseWrapper(localName = "ListarProyectosResponse", targetNamespace = "http://Servicios/", className = "servicios.ListarProyectosResponse")
    @Action(input = "http://Servicios/ArcAssistantService/ListarProyectosRequest", output = "http://Servicios/ArcAssistantService/ListarProyectosResponse")
    public List<Proyecto> listarProyectos(
        @WebParam(name = "parameter", targetNamespace = "")
        String parameter);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "ModificarModulo")
    @Oneway
    @RequestWrapper(localName = "ModificarModulo", targetNamespace = "http://Servicios/", className = "servicios.ModificarModulo")
    @Action(input = "http://Servicios/ArcAssistantService/ModificarModulo")
    public void modificarModulo(
        @WebParam(name = "parameter", targetNamespace = "")
        Modulo parameter);

    /**
     * 
     * @param proyecto
     * @param usuario
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "EliminarProyecto")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "EliminarProyecto", targetNamespace = "http://Servicios/", className = "servicios.EliminarProyecto")
    @ResponseWrapper(localName = "EliminarProyectoResponse", targetNamespace = "http://Servicios/", className = "servicios.EliminarProyectoResponse")
    @Action(input = "http://Servicios/ArcAssistantService/EliminarProyectoRequest", output = "http://Servicios/ArcAssistantService/EliminarProyectoResponse")
    public boolean eliminarProyecto(
        @WebParam(name = "proyecto", targetNamespace = "")
        Proyecto proyecto,
        @WebParam(name = "usuario", targetNamespace = "")
        int usuario);

    /**
     * 
     * @return
     *     returns java.util.List<servicios.Interface>
     */
    @WebMethod(operationName = "ListarInterfaces")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ListarInterfaces", targetNamespace = "http://Servicios/", className = "servicios.ListarInterfaces")
    @ResponseWrapper(localName = "ListarInterfacesResponse", targetNamespace = "http://Servicios/", className = "servicios.ListarInterfacesResponse")
    @Action(input = "http://Servicios/ArcAssistantService/ListarInterfacesRequest", output = "http://Servicios/ArcAssistantService/ListarInterfacesResponse")
    public List<Interface> listarInterfaces();

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://Servicios/", className = "servicios.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://Servicios/", className = "servicios.HelloResponse")
    @Action(input = "http://Servicios/ArcAssistantService/helloRequest", output = "http://Servicios/ArcAssistantService/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "CrearPatron")
    @Oneway
    @RequestWrapper(localName = "CrearPatron", targetNamespace = "http://Servicios/", className = "servicios.CrearPatron")
    @Action(input = "http://Servicios/ArcAssistantService/CrearPatron")
    public void crearPatron(
        @WebParam(name = "parameter", targetNamespace = "")
        Patron parameter);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "ModificarEscenario")
    @Oneway
    @RequestWrapper(localName = "ModificarEscenario", targetNamespace = "http://Servicios/", className = "servicios.ModificarEscenario")
    @Action(input = "http://Servicios/ArcAssistantService/ModificarEscenario")
    public void modificarEscenario(
        @WebParam(name = "parameter", targetNamespace = "")
        Escenario parameter);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "EliminarInterface")
    @Oneway
    @RequestWrapper(localName = "EliminarInterface", targetNamespace = "http://Servicios/", className = "servicios.EliminarInterface")
    @Action(input = "http://Servicios/ArcAssistantService/EliminarInterface")
    public void eliminarInterface(
        @WebParam(name = "parameter", targetNamespace = "")
        Interface parameter);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "ModificarProyecto")
    @Oneway
    @RequestWrapper(localName = "ModificarProyecto", targetNamespace = "http://Servicios/", className = "servicios.ModificarProyecto")
    @Action(input = "http://Servicios/ArcAssistantService/ModificarProyecto")
    public void modificarProyecto(
        @WebParam(name = "parameter", targetNamespace = "")
        Proyecto parameter);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "GuardarRationaleAdd")
    @Oneway
    @RequestWrapper(localName = "GuardarRationaleAdd", targetNamespace = "http://Servicios/", className = "servicios.GuardarRationaleAdd")
    @Action(input = "http://Servicios/ArcAssistantService/GuardarRationaleAdd")
    public void guardarRationaleAdd(
        @WebParam(name = "parameter", targetNamespace = "")
        Rationaleadd parameter);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "EliminarEscenario")
    @Oneway
    @RequestWrapper(localName = "EliminarEscenario", targetNamespace = "http://Servicios/", className = "servicios.EliminarEscenario")
    @Action(input = "http://Servicios/ArcAssistantService/EliminarEscenario")
    public void eliminarEscenario(
        @WebParam(name = "parameter", targetNamespace = "")
        Escenario parameter);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "ModificarAtributo")
    @Oneway
    @RequestWrapper(localName = "ModificarAtributo", targetNamespace = "http://Servicios/", className = "servicios.ModificarAtributo")
    @Action(input = "http://Servicios/ArcAssistantService/ModificarAtributo")
    public void modificarAtributo(
        @WebParam(name = "parameter", targetNamespace = "")
        Atributocalidad parameter);

    /**
     * 
     * @param idpro
     * @param paso
     * @return
     *     returns servicios.Rationaleqaw
     */
    @WebMethod(operationName = "ObtenerRationaleQAW")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ObtenerRationaleQAW", targetNamespace = "http://Servicios/", className = "servicios.ObtenerRationaleQAW")
    @ResponseWrapper(localName = "ObtenerRationaleQAWResponse", targetNamespace = "http://Servicios/", className = "servicios.ObtenerRationaleQAWResponse")
    @Action(input = "http://Servicios/ArcAssistantService/ObtenerRationaleQAWRequest", output = "http://Servicios/ArcAssistantService/ObtenerRationaleQAWResponse")
    public Rationaleqaw obtenerRationaleQAW(
        @WebParam(name = "idpro", targetNamespace = "")
        int idpro,
        @WebParam(name = "paso", targetNamespace = "")
        String paso);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "ModificarInterface")
    @Oneway
    @RequestWrapper(localName = "ModificarInterface", targetNamespace = "http://Servicios/", className = "servicios.ModificarInterface")
    @Action(input = "http://Servicios/ArcAssistantService/ModificarInterface")
    public void modificarInterface(
        @WebParam(name = "parameter", targetNamespace = "")
        Interface parameter);

    /**
     * 
     * @param idpro
     * @param paso
     * @return
     *     returns servicios.Rationaleadd
     */
    @WebMethod(operationName = "ObtenerRationaleAdd")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ObtenerRationaleAdd", targetNamespace = "http://Servicios/", className = "servicios.ObtenerRationaleAdd")
    @ResponseWrapper(localName = "ObtenerRationaleAddResponse", targetNamespace = "http://Servicios/", className = "servicios.ObtenerRationaleAddResponse")
    @Action(input = "http://Servicios/ArcAssistantService/ObtenerRationaleAddRequest", output = "http://Servicios/ArcAssistantService/ObtenerRationaleAddResponse")
    public Rationaleadd obtenerRationaleAdd(
        @WebParam(name = "idpro", targetNamespace = "")
        int idpro,
        @WebParam(name = "paso", targetNamespace = "")
        String paso);

    /**
     * 
     * @param parameter
     */
    @WebMethod(operationName = "GuardarRationaleQaw")
    @Oneway
    @RequestWrapper(localName = "GuardarRationaleQaw", targetNamespace = "http://Servicios/", className = "servicios.GuardarRationaleQaw")
    @Action(input = "http://Servicios/ArcAssistantService/GuardarRationaleQaw")
    public void guardarRationaleQaw(
        @WebParam(name = "parameter", targetNamespace = "")
        Rationaleqaw parameter);

}
